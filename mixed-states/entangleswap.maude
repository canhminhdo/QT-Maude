in quantum-circuits.maude

mod ENTAGLE-SWAP is
    pr CIRCUIT .

    ops EPR : -> Matrix .
    eq EPR = (1 ./ Sqrt(2)) . |0>(x)|0> + (1 ./ Sqrt(2)) . |1>(x)|1> .

    op ES : -> Ensemble .
    eq ES = {|0> (x) |0> (x) |0>  (x) |0>, 1} .

    op init : -> Config .
    eq init = {
        (#qbits: findN(ES))
        (mState: convert(ES))
        (actions: (
            H(0) CX(0, 1) H(2) CX(2, 3) CX(1, 2) H(1)
            M(2) M(1)
            (c[2] == 1 ? X(3))
            (c[1] == 1 ? Z(3))
            SWAP(1, 3))
        )
        (prob: 1)
        (bits: empty)
        (isEnd: false)
    } .
endm

load model-checker .

mod ENTAGLE-SWAP-PREDS is
    pr ENTAGLE-SWAP .
    inc SATISFACTION .

    subsort Config < State .

    var OCs : Soup{OComp} .
    var PROP : Prop .
    var MS : MixedState .
    var Prob : Scalar .
    var N : Nat .

    op isSuccess : -> Prop .
    eq {(isEnd: true) (mState: MS) (prob: Prob) (#qbits: N) OCs} |= isSuccess
    = Prob > 0 implies 
    tr[3](tr[2](MS, N), N) == ((EPR x (EPR)^+) (x) I (x) I) .
    eq {OCs} |= PROP = false [owise] .
endm

mod ENTAGLE-SWAP-CHECK is
    inc ENTAGLE-SWAP-PREDS .
    inc MODEL-CHECKER .
    inc LTL-SIMPLIFIER .

    op teleEntangle : -> Formula .
    eq teleEntangle = <> isSuccess .
endm

in ../debug.maude

red modelCheck(init, teleEntangle) .
